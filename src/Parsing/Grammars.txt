Grammar Without Whitespace (Almost correct, but ambiguous because it lacks whitespace):

Expressions -> Expression Expressions | Expression

Expression -> PrimitiveSymbol |
              BracketedExpression |
              FunctionApplication

BracketedExpression -> ( Expressions )

FunctionApplication -> FunctionalSymbol ArgumentLists

ArgumentLists -> ArgumentList ArgumentLists | ArgumentList

ArgumentList ->  ( Arguments )

Arguments -> Expressions , Arguments | Expressions 

--------------------------------------------------------------------------------

Correct Grammar (but not fit to implementation):

Expression -> Whitespace PrimitiveSymbol Whitespace |
              Whitespace BracketedExpression Whitespace |
              Whitespace FunctionApplication Whitespace |
              Whitespace FunctionalSymbol MandatoryWhitespace BracketedExpression Expression |
              Whitespace NonFunctionalSymbol Whitespace BracketedExpression Expression |
              Whitespace PrimitiveSymbol Whitespace PrimitiveSymbol Expression |
              Whitespace PrimitiveSymbol Whitespace FunctionApplication Expression | 
              Whitespace BracketedExpression Whitespace Expression |
              Whitespace FunctionApplication Whitespace PrimitiveSymbol Expression |
              Whitespace FunctionApplication MandatoryWhitespace BracketedExpression Expression |
              Whitespace FunctionApplication Whitespace FunctionApplication Expression

BracketedExpression -> ( Expression )

FunctionApplication -> FunctionalSymbol ArgumentLists

ArgumentLists -> ArgumentList ArgumentLists | ArgumentList

ArgumentList ->  ( Arguments )

Arguments -> Expression , Arguments | Expression 

PrimitiveSymbol -> FunctionalSymbol | NonFunctionalSymbol 

--------------------------------------------------------------------------------

Equivalent Parsing Expression Grammar:

Expression <- Whitespace (ExpressionKernel Whitespace)+

ExpressionKernel <- FunctionApplication / BracketedExpression / PrimitiveExpression

Whitespace <- " "*

FunctionApplication <- FunctionalSymbol ArgumentList+

ArgumentList <- "(" Expression ("," Expression)* ")"

BracketedExpression <- "(" Expression ")"

PrimitiveExpression <- FunctionalSymbol / NonFunctionalSymbol